<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 工程基本信息 -->
    <name>base-project</name>
    <description>基础工程模板</description>

    <!-- 工程坐标及版本信息 -->
    <groupId>com.lian</groupId>
    <artifactId>base-project</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <!-- 请求处理层: 主要是对访问控制进行转发,各类基本参数校验,或者不复用的业务简单处理等 -->
        <module>base-web</module>
        <!-- 业务逻辑层: 相对具体的业务逻辑服务层 -->
        <module>base-service</module>
        <module>base-impl</module>
        <!-- 通用业务处理层:
            1) 对第三方平台封装的层,预处理返回结果及转换异常信息
            2) 对Service层通用能力的下沉,如缓存方案、中间件通用处理
            3) 与DAO交互,对多个DAO的组合复用 -->
        <module>base-manager</module>
        <!-- 数据访问层: 与底层MySQL、Oracle、Hbase等进行数据交互 -->
        <module>base-dao</module>
        <!-- 公共组件层: 工具类、公共枚举、模型、常量、配置等 -->
        <module>base-common</module>
    </modules>

    <!--定义属性值 -->
    <properties>
        <!--编译字符集-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- JDK 版本 -->
        <java.version>1.8</java.version>
        <!--编译jdk版本-->
        <maven.compiler.source>8</maven.compiler.source>
        <!--输出jdk版本-->
        <maven.compiler.target>8</maven.compiler.target>
        <spring.boot.version>2.6.6</spring.boot.version>
        <!--lombok版本-->
        <lombok.version>1.18.22</lombok.version>
        <!--HuTool工具集合-->
        <hutool.version>5.8.0.M3</hutool.version>
        <!-- druid 连接池 -->
        <druid.version>1.2.8</druid.version>
        <!--mybatis-plus版本-->
        <mybatis-plus.version>3.4.3</mybatis-plus.version>
        <p6spy.version>3.9.0</p6spy.version>
        <!--对象转换工具-->
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <!--Swagger文档-->
        <swagger-starter.version>1.9.1.RELEASE</swagger-starter.version>
        <!--Excel工具-->
        <alanpoi.analysis.version>1.3.6</alanpoi.analysis.version>
        <persistence.version>2.2</persistence.version>
        <leaf.version>1.0.2-SNAPSHOT</leaf.version>
        <!-- 表达式校验工具 -->
        <aviator.version>5.3.1</aviator.version>
    </properties>

    <!-- 依赖统一版本管理声明 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- swagger集成 -->
            <dependency>
                <groupId>com.spring4all</groupId>
                <artifactId>swagger-spring-boot-starter</artifactId>
                <version>${swagger-starter.version}</version>
            </dependency>
            <!-- 子项目统一版本 -->
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lian</groupId>
                <artifactId>base-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- lombok 依赖 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- HuTool 工具类 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- druid 连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <!-- mapstruct 对象转换工具 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>${persistence.version}</version>
            </dependency>
            <!-- Excel 工具 -->
            <dependency>
                <groupId>com.alanpoi</groupId>
                <artifactId>alanpoi-analysis</artifactId>
                <version>${alanpoi.analysis.version}</version>
            </dependency>
            <!-- 美团雪花算法 -->
            <dependency>
                <artifactId>leaf-boot-starter</artifactId>
                <groupId>com.sankuai.inf.leaf</groupId>
                <version>${leaf.version}</version>
            </dependency>
            <!-- 表达式校验工具包 -->
            <dependency>
                <groupId>com.googlecode.aviator</groupId>
                <artifactId>aviator</artifactId>
                <version>${aviator.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--私有仓库地址-->
    <distributionManagement>
        <repository>
            <id>maven-releases</id>
            <name>Internal Releases</name>
            <url>http://maven.keendata.com:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven-snapshots</id>
            <name>Internal Snapshots</name>
            <url>http://maven.keendata.com:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- Maven远程仓库设置 非必要，可以删除 -->
    <!--    <repositories>-->
    <!--        <repository>-->
    <!--            <id>public</id>-->
    <!--            <name>aliyun nexus</name>-->
    <!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
    <!--            <releases>-->
    <!--                <enabled>true</enabled>-->
    <!--            </releases>-->
    <!--        </repository>-->
    <!--    </repositories>-->

    <!--    &lt;!&ndash; Maven远程插件库设置 非必要，可以删除 &ndash;&gt;-->
    <!--    <pluginRepositories>-->
    <!--        <pluginRepository>-->
    <!--            <id>public</id>-->
    <!--            <name>aliyun nexus</name>-->
    <!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
    <!--            <releases>-->
    <!--                <enabled>true</enabled>-->
    <!--            </releases>-->
    <!--            <snapshots>-->
    <!--                <enabled>false</enabled>-->
    <!--            </snapshots>-->
    <!--        </pluginRepository>-->
    <!--    </pluginRepositories>-->

    <!-- 编译管理 jdk版本和字符集编码 -->
    <build>
        <plugins>
            <plugin>
                <!--源码编译插件-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <!-- 对插件进行全局设置，不管此插件绑定到什么阶段都使用同样的配置 -->
                <configuration>
                    <!-- 编译1.8版本的源文件 -->
                    <source>${java.version}</source>
                    <!-- 生成与JVM 1.8 兼容的字节码文件 -->
                    <target>${java.version}</target>
                    <!-- 字符编码-->
                    <encoding>${project.build.sourceEncoding}</encoding>

                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>